workspace(
    name = "blade",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

################################################
# Make sure we are pulling a recent skylib
################################################
http_archive(
    name = "bazel_skylib",
    sha256 = "66ffd9315665bfaafc96b52278f57c7e2dd09f5ede279ea6d39b2be471e7e3aa",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.2/bazel-skylib-1.4.2.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.2/bazel-skylib-1.4.2.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

http_archive(
    name = "rules_proto",
    sha256 = "dc3fb206a2cb3441b485eb1e423165b231235a1ea9b031b4433cf7bc1fa460dd",
    strip_prefix = "rules_proto-5.3.0-21.7",
    urls = [
        "https://github.com/bazelbuild/rules_proto/archive/refs/tags/5.3.0-21.7.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

http_archive(
    name = "rules_rust",
    sha256 = "75177226380b771be36d7efc538da842c433f14cd6c36d7660976efb53defe86",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.34.1/rules_rust-v0.34.1.tar.gz"],
)

http_archive(
    name = "io_tweag_rules_nixpkgs",
    sha256 = "3cd7a8fa957b58a64e4b5a1c15c072ff672747d32b120e12e4e9534ad8650c5c",
    strip_prefix = "rules_nixpkgs-98daf39280f21ce0ee8086543b00a65a1a4bf621",
    urls = ["https://github.com/tweag/rules_nixpkgs/archive/98daf39280f21ce0ee8086543b00a65a1a4bf621.tar.gz"],
)

load("@io_tweag_rules_nixpkgs//nixpkgs:repositories.bzl", "rules_nixpkgs_dependencies")

rules_nixpkgs_dependencies()

load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_cc_configure", "nixpkgs_local_repository")

# It is recommended to keep nixpkgs of nix-shell (which provide Bazel),
# and nixpkgs of Bazel Workspace in sync - otherwise one may
# got hit with nasty glibc mismatch errors.
nixpkgs_local_repository(
    name = "nixpkgs",
    nix_file = "//nix/bazel:nixpkgs.nix",
    nix_file_deps = [
        "//:flake.lock",
        "//nix/bazel:nixpkgs.nix",
    ],
)

nixpkgs_local_repository(
    name = "fenix",
    nix_file = "//nix/rust:fenix.nix",
    nix_file_deps = ["//:flake.lock"],
)

# rules_rust also uses the cc compiler
nixpkgs_cc_configure(
    name = "nixpkgs_config_cc",
    nix_file = "//nix/cc:cc.nix",
    repository = "@nixpkgs",
)

# load rules_cc
http_archive(
    name = "rules_cc",
    sha256 = "4dccbfd22c0def164c8f47458bd50e0c7148f3d92002cdb459c2a96a68498241",
    urls = ["https://github.com/bazelbuild/rules_cc/releases/download/0.0.1/rules_cc-0.0.1.tar.gz"],
)

load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies", "rules_cc_toolchains")

rules_cc_dependencies()

rules_cc_toolchains()

load("@io_tweag_rules_nixpkgs//nixpkgs:toolchains/rust.bzl", "nixpkgs_rust_configure")

# Note that default_edition doesn't work.
nixpkgs_rust_configure(
    name = "nix_rust",
    nix_file = "//nix/rust:rust.nix",
    repositories = {
        "nixpkgs": "@nixpkgs",
        "fenix": "@fenix",
    },
)

nixpkgs_rust_configure(
    name = "nix_rust_wasm",
    nix_file = "//nix/rust:rust.nix",
    nixopts = [
        "--argstr",
        "target",
        "wasm32-unknown-unknown",
    ],
    repositories = {
        "nixpkgs": "@nixpkgs",
        "fenix": "@fenix",
    },
    target_constraints = [
        "@platforms//cpu:wasm32",
    ],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies")

rules_rust_dependencies()

# crate_universe as a way of governing deps
load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies(
    bootstrap = True,
    rust_toolchain_cargo_template = "@nix_rust//:bin/{tool}",
    rust_toolchain_rustc_template = "@nix_rust//:bin/{tool}",
)

load("//third_party/nix:deps.bzl", "third_party_nix_deps")

third_party_nix_deps()

load("//third_party/rust:deps.bzl", "rust_dependencies")

rust_dependencies()

load("@crate//:defs.bzl", "crate_repositories")

crate_repositories()

load("@wasm_crate//:defs.bzl", wasm_crate_repositories = "crate_repositories")

wasm_crate_repositories()

load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rust_analyzer_dependencies()


register_toolchains("//nix/rust:rust_analyzer_toolchain")
register_toolchains("//nix/rust:rustfmt_toolchain")
register_toolchains("//nix/rust:wasm_bindgen_toolchain")
register_toolchains("@rules_rust//rust/private/dummy_cc_toolchain:dummy_cc_wasm32_toolchain")

http_archive(
    name = "com_google_protobuf",
    sha256 = "0930b1a6eb840a2295dfcb13bb5736d1292c3e0d61a90391181399327be7d8f1",
    strip_prefix = "protobuf-24.1",
    urls = ["https://github.com/protocolbuffers/protobuf/releases/download/v24.1/protobuf-24.1.tar.gz"],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

http_archive(
    name = "googleapis",
    sha256 = "9094b43a8a8b6f05dd4868cb509fa934012725107995865b5c8eb9c67fbea35d",
    strip_prefix = "googleapis-db5ce67d735d2ceb6fe925f3e317a3f30835cfd6",
    urls = ["https://github.com/googleapis/googleapis/archive/db5ce67d735d2ceb6fe925f3e317a3f30835cfd6.tar.gz"],
)

load("@googleapis//:repository_rules.bzl", "switched_rules_by_language")

switched_rules_by_language("com_google_googleapis_imports")

load("@rules_rust//proto/prost:repositories.bzl", "rust_prost_dependencies")

rust_prost_dependencies()

load("@rules_rust//proto/prost:transitive_repositories.bzl", "rust_prost_transitive_repositories")

rust_prost_transitive_repositories()

register_toolchains("//prost:prost_toolchain")

http_archive(
    name = "aspect_rules_js",
    sha256 = "76a04ef2120ee00231d85d1ff012ede23963733339ad8db81f590791a031f643",
    strip_prefix = "rules_js-1.34.1",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.34.1/rules_js-v1.34.1.tar.gz",
)
